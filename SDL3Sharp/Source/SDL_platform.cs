// ----------------------------------------------------------------------------
// <auto-generated>
// This is autogenerated code by CppSharp.
// Do not edit this file or all your changes will be lost after re-generation.
// </auto-generated>
// ----------------------------------------------------------------------------
using System;
using System.Runtime.InteropServices;
using System.Security;
using __CallingConvention = global::System.Runtime.InteropServices.CallingConvention;
using __IntPtr = global::System.IntPtr;

#pragma warning disable CS0109 // Member does not hide an inherited member; new keyword is not required
#pragma warning disable CS9084 // Struct member returns 'this' or other instance members by reference

namespace SDL3Sharp
{
    public unsafe partial class SDL
    {
        public partial struct __Internal
        {
            [SuppressUnmanagedCodeSecurity, DllImport("SDL3", EntryPoint = "SDL_GetPlatform", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr GetPlatform();
        }

        /// <summary>Get the name of the platform.</summary>
        /// <remarks>
        /// <para>Here are the names returned for some (but not all) supported platforms:</para>
        /// <para>- &quot;Windows&quot;</para>
        /// <para>- &quot;macOS&quot;</para>
        /// <para>- &quot;Linux&quot;</para>
        /// <para>- &quot;iOS&quot;</para>
        /// <para>- &quot;Android&quot;</para>
        /// <para>the name of the platform. If the correct platform name is not</para>
        /// <para>available, returns a string beginning with the text &quot;Unknown&quot;.</para>
        /// <para>This function is available since SDL 3.0.0.</para>
        /// </remarks>
        public static string GetPlatform()
        {
            var ___ret = __Internal.GetPlatform();
            return CppSharp.Runtime.MarshalUtil.GetString(global::System.Text.Encoding.UTF8, ___ret);
        }
    }
}
