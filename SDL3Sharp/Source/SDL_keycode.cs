// ----------------------------------------------------------------------------
// <auto-generated>
// This is autogenerated code by CppSharp.
// Do not edit this file or all your changes will be lost after re-generation.
// </auto-generated>
// ----------------------------------------------------------------------------
using System;
using System.Runtime.InteropServices;
using System.Security;
using __CallingConvention = global::System.Runtime.InteropServices.CallingConvention;
using __IntPtr = global::System.IntPtr;

#pragma warning disable CS0109 // Member does not hide an inherited member; new keyword is not required
#pragma warning disable CS9084 // Struct member returns 'this' or other instance members by reference

namespace SDL3Sharp
{
    public enum KeyCode
    {
        Unknown = 0,
        Return = 13,
        Escape = 27,
        Backspace = 8,
        Tab = 9,
        Space = 32,
        Exclaim = 33,
        Quotedbl = 34,
        Hash = 35,
        Percent = 37,
        Dollar = 36,
        Ampersand = 38,
        Quote = 39,
        Leftparen = 40,
        Rightparen = 41,
        Asterisk = 42,
        Plus = 43,
        Comma = 44,
        Minus = 45,
        Period = 46,
        Slash = 47,
        _0 = 48,
        _1 = 49,
        _2 = 50,
        _3 = 51,
        _4 = 52,
        _5 = 53,
        _6 = 54,
        _7 = 55,
        _8 = 56,
        _9 = 57,
        Colon = 58,
        Semicolon = 59,
        Less = 60,
        Equals = 61,
        Greater = 62,
        Question = 63,
        At = 64,
        Leftbracket = 91,
        Backslash = 92,
        Rightbracket = 93,
        Caret = 94,
        Underscore = 95,
        Backquote = 96,
        A = 97,
        B = 98,
        C = 99,
        D = 100,
        E = 101,
        F = 102,
        G = 103,
        H = 104,
        I = 105,
        J = 106,
        K = 107,
        L = 108,
        M = 109,
        N = 110,
        O = 111,
        P = 112,
        Q = 113,
        R = 114,
        S = 115,
        T = 116,
        U = 117,
        V = 118,
        W = 119,
        X = 120,
        Y = 121,
        Z = 122,
        Capslock = 1073741881,
        F1 = 1073741882,
        F2 = 1073741883,
        F3 = 1073741884,
        F4 = 1073741885,
        F5 = 1073741886,
        F6 = 1073741887,
        F7 = 1073741888,
        F8 = 1073741889,
        F9 = 1073741890,
        F10 = 1073741891,
        F11 = 1073741892,
        F12 = 1073741893,
        Printscreen = 1073741894,
        Scrolllock = 1073741895,
        Pause = 1073741896,
        Insert = 1073741897,
        Home = 1073741898,
        Pageup = 1073741899,
        Delete = 127,
        End = 1073741901,
        Pagedown = 1073741902,
        Right = 1073741903,
        Left = 1073741904,
        Down = 1073741905,
        Up = 1073741906,
        Numlockclear = 1073741907,
        KpDivide = 1073741908,
        KpMultiply = 1073741909,
        KpMinus = 1073741910,
        KpPlus = 1073741911,
        KpEnter = 1073741912,
        Kp1 = 1073741913,
        Kp2 = 1073741914,
        Kp3 = 1073741915,
        Kp4 = 1073741916,
        Kp5 = 1073741917,
        Kp6 = 1073741918,
        Kp7 = 1073741919,
        Kp8 = 1073741920,
        Kp9 = 1073741921,
        Kp0 = 1073741922,
        KpPeriod = 1073741923,
        Application = 1073741925,
        Power = 1073741926,
        KpEquals = 1073741927,
        F13 = 1073741928,
        F14 = 1073741929,
        F15 = 1073741930,
        F16 = 1073741931,
        F17 = 1073741932,
        F18 = 1073741933,
        F19 = 1073741934,
        F20 = 1073741935,
        F21 = 1073741936,
        F22 = 1073741937,
        F23 = 1073741938,
        F24 = 1073741939,
        Execute = 1073741940,
        Help = 1073741941,
        Menu = 1073741942,
        Select = 1073741943,
        Stop = 1073741944,
        Again = 1073741945,
        Undo = 1073741946,
        Cut = 1073741947,
        Copy = 1073741948,
        Paste = 1073741949,
        Find = 1073741950,
        Mute = 1073741951,
        Volumeup = 1073741952,
        Volumedown = 1073741953,
        KpComma = 1073741957,
        KpEqualsas400 = 1073741958,
        Alterase = 1073741977,
        Sysreq = 1073741978,
        Cancel = 1073741979,
        Clear = 1073741980,
        Prior = 1073741981,
        Return2 = 1073741982,
        Separator = 1073741983,
        Out = 1073741984,
        Oper = 1073741985,
        Clearagain = 1073741986,
        Crsel = 1073741987,
        Exsel = 1073741988,
        Kp00 = 1073742000,
        Kp000 = 1073742001,
        Thousandsseparator = 1073742002,
        Decimalseparator = 1073742003,
        Currencyunit = 1073742004,
        Currencysubunit = 1073742005,
        KpLeftparen = 1073742006,
        KpRightparen = 1073742007,
        KpLeftbrace = 1073742008,
        KpRightbrace = 1073742009,
        KpTab = 1073742010,
        KpBackspace = 1073742011,
        KpA = 1073742012,
        KpB = 1073742013,
        KpC = 1073742014,
        KpD = 1073742015,
        KpE = 1073742016,
        KpF = 1073742017,
        KpXor = 1073742018,
        KpPower = 1073742019,
        KpPercent = 1073742020,
        KpLess = 1073742021,
        KpGreater = 1073742022,
        KpAmpersand = 1073742023,
        KpDblampersand = 1073742024,
        KpVerticalbar = 1073742025,
        KpDblverticalbar = 1073742026,
        KpColon = 1073742027,
        KpHash = 1073742028,
        KpSpace = 1073742029,
        KpAt = 1073742030,
        KpExclam = 1073742031,
        KpMemstore = 1073742032,
        KpMemrecall = 1073742033,
        KpMemclear = 1073742034,
        KpMemadd = 1073742035,
        KpMemsubtract = 1073742036,
        KpMemmultiply = 1073742037,
        KpMemdivide = 1073742038,
        KpPlusminus = 1073742039,
        KpClear = 1073742040,
        KpClearentry = 1073742041,
        KpBinary = 1073742042,
        KpOctal = 1073742043,
        KpDecimal = 1073742044,
        KpHexadecimal = 1073742045,
        Lctrl = 1073742048,
        Lshift = 1073742049,
        Lalt = 1073742050,
        Lgui = 1073742051,
        Rctrl = 1073742052,
        Rshift = 1073742053,
        Ralt = 1073742054,
        Rgui = 1073742055,
        Mode = 1073742081,
        Audionext = 1073742082,
        Audioprev = 1073742083,
        Audiostop = 1073742084,
        Audioplay = 1073742085,
        Audiomute = 1073742086,
        Mediaselect = 1073742087,
        Www = 1073742088,
        Mail = 1073742089,
        Calculator = 1073742090,
        Computer = 1073742091,
        AcSearch = 1073742092,
        AcHome = 1073742093,
        AcBack = 1073742094,
        AcForward = 1073742095,
        AcStop = 1073742096,
        AcRefresh = 1073742097,
        AcBookmarks = 1073742098,
        Brightnessdown = 1073742099,
        Brightnessup = 1073742100,
        Displayswitch = 1073742101,
        Kbdillumtoggle = 1073742102,
        Kbdillumdown = 1073742103,
        Kbdillumup = 1073742104,
        Eject = 1073742105,
        Sleep = 1073742106,
        App1 = 1073742107,
        App2 = 1073742108,
        Audiorewind = 1073742109,
        Audiofastforward = 1073742110,
        Softleft = 1073742111,
        Softright = 1073742112,
        Call = 1073742113,
        Endcall = 1073742114
    }

    /// <summary>Enumeration of valid key mods (possibly OR'd together).</summary>
    [Flags]
    public enum Keymod
    {
        None = 0,
        Lshift = 1,
        Rshift = 2,
        Lctrl = 64,
        Rctrl = 128,
        Lalt = 256,
        Ralt = 512,
        Lgui = 1024,
        Rgui = 2048,
        Num = 4096,
        Caps = 8192,
        Mode = 16384,
        Scroll = 32768,
        Ctrl = 192,
        Shift = 3,
        Alt = 768,
        Gui = 3072,
        Reserved = 32768
    }

    /// <summary>The SDL virtual key representation.</summary>
    /// <remarks>
    /// <para>Values of this type are used to represent keyboard keys using the current</para>
    /// <para>layout of the keyboard.  These values include Unicode values representing</para>
    /// <para>the unmodified character that would be generated by pressing the key, or</para>
    /// <para>an SDLK_* constant for those keys that do not generate characters.</para>
    /// <para>A special exception is the number keys at the top of the keyboard which</para>
    /// <para>map to SDLK_0...SDLK_9 on AZERTY layouts.</para>
    /// </remarks>
    /// <summary>Enumeration of valid key mods (possibly OR'd together).</summary>
}
