// ----------------------------------------------------------------------------
// <auto-generated>
// This is autogenerated code by CppSharp.
// Do not edit this file or all your changes will be lost after re-generation.
// </auto-generated>
// ----------------------------------------------------------------------------
using System;
using System.Runtime.InteropServices;
using System.Security;
using __CallingConvention = global::System.Runtime.InteropServices.CallingConvention;
using __IntPtr = global::System.IntPtr;

#pragma warning disable CS0109 // Member does not hide an inherited member; new keyword is not required
#pragma warning disable CS9084 // Struct member returns 'this' or other instance members by reference

namespace SDL3Sharp
{
    public unsafe partial class SDL
    {
        public partial struct __Internal
        {
            [SuppressUnmanagedCodeSecurity, DllImport("SDL3", EntryPoint = "SDL_OpenURL", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int OpenURL([MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(CppSharp.Runtime.UTF8Marshaller))] string url);
        }

        /// <summary>Open a URL/URI in the browser or other appropriate external application.</summary>
        /// <param name="url">
        /// <para>A valid URL/URI to open. Use `file:///full/path/to/file` for</para>
        /// <para>local files, if supported.</para>
        /// </param>
        /// <remarks>
        /// <para>Open a URL in a separate, system-provided application. How this works will</para>
        /// <para>vary wildly depending on the platform. This will likely launch what makes</para>
        /// <para>sense to handle a specific URL's protocol (a web browser for `http://`,</para>
        /// <para>etc), but it might also be able to launch file managers for directories and</para>
        /// <para>other things.</para>
        /// <para>What happens when you open a URL varies wildly as well: your game window</para>
        /// <para>may lose focus (and may or may not lose focus if your game was fullscreen</para>
        /// <para>or grabbing input at the time). On mobile devices, your app will likely</para>
        /// <para>move to the background or your process might be paused. Any given platform</para>
        /// <para>may or may not handle a given URL.</para>
        /// <para>If this is unimplemented (or simply unavailable) for a platform, this will</para>
        /// <para>fail with an error. A successful result does not mean the URL loaded, just</para>
        /// <para>that we launched _something_ to handle it (or at least believe we did).</para>
        /// <para>All this to say: this function can be useful, but you should definitely</para>
        /// <para>test it on every platform you target.</para>
        /// <para>0 on success or a negative error code on failure; call</para>
        /// <para>SDL_GetError() for more information.</para>
        /// <para>This function is available since SDL 3.0.0.</para>
        /// </remarks>
        public static int OpenURL(string url)
        {
            var ___ret = __Internal.OpenURL(url);
            return ___ret;
        }
    }
}
